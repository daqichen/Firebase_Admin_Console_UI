{"version":3,"sources":["components/card.module.css","constants/routes.js","components/Auth/Firebase/context.js","components/Auth/Firebase/firebase.js","components/Auth/Firebase/index.js","components/CodeBlock.js","constants/codebase.js","Home.js","Subpages/UpdateOrigami.js","components/OrigamiCard.js","Origami.js","Subpages/AddOrigami.js","Subpages/AddUser.js","Add.js","TVmazeDemo.js","Subpages/UpdateUser.js","components/Auth/Admin.js","components/Auth/SignIn.js","components/Navbar.js","App.js","reportWebVitals.js","index.js","components/styles.module.css"],"names":["module","exports","ADMIN","ORIGAMI","ADD","TVMAZE","FirebaseContext","React","createContext","firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","app","initializeApp","this","auth","CodeBlock","props","marked","setOptions","renderer","Renderer","highlight","code","lang","language","hljs","getLanguage","value","val","className","styles","containerWithoutBorder","doc","dangerouslySetInnerHTML","__html","content","containsCode","classPrefix","Home","getAuth","useAuthState","user","displayName","email","photoURL","emailVerified","console","log","currentUser","designDoc","map","section","section_id","title","details","para","contains_code","codeLang","code_lang","UpdateOrigami","useState","collection","identifier_name","identifier_value","name","model_name_field","creator_field","creator","level_of_difficulty_field","difficulty_level","steps_field","steps","source_pattern_link_field","source","paper_ratio_field","paper","video_tutorial_field","video_tutorial","img_field","img","formData","setFormData","isLoading","setIsLoading","Form","Group","Label","Control","type","placeholder","onChange","e","target","as","Number","Button","bsPrefix","variant","onClick","event","fetch","headers","body","JSON","stringify","then","resp","json","result","catch","error","class","getId","url","split","OrigamiCard","model","setModel","show","setShow","showUpdate","setShowUpdate","container","contentContainer","header","nameContainer","info","headline","href","updateButton","id","OverlayTrigger","overlay","Tooltip","disabled","style","pointerEvents","deleteButton","Offcanvas","onHide","Header","closeButton","Title","Body","videoContainer","src","width","height","frameborder","allowfullscreen","Toast","onClose","toast","Origami","rerenderTrig","setRerenderTrig","origami","setOrigami","filter_applied","difficulty","low_steps","high_steps","order_by","filters","setFilters","useEffect","urlParameters","Object","entries","join","String","response","a","data","status","setNoResult","keys","length","err","noResult","selected","min","max","model_name","level_of_difficulty","source_pattern","number_of_steps","paper_ratio","AddOrigami","setResult","AddUser","Add","setCollection","DropdownButton","onSelect","Dropdown","Item","eventKey","TVmaze","projects","setProjects","showname","setShowname","message","setMessage","project","UpdateUser","loading","setStatus","userinfo","setUserinfo","updateProfile","AdminPage","key","setKey","updatingP","setUpdatingP","tabs","Tabs","activeKey","k","Tab","imgContainer","profilepic","SignInForm","setEmail","password","setPassword","useSignInWithEmailAndPassword","signInWithEmailAndPassword","Navbar","loginPrompt","setLoginPrompt","navContainer","navLinks","typewriter","navItem","ROUTES","navAuth","navButton","signOut","SignIn","App","Fragment","exact","path","element","Admin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.469af23c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"card_tabs__diq3W\",\"profilepic\":\"card_profilepic__2ls3K\",\"container\":\"card_container__3WaTE\",\"contentContainer\":\"card_contentContainer__15FGh\",\"videoContainer\":\"card_videoContainer__1ayes\",\"imgContainer\":\"card_imgContainer__1DV_i\",\"header\":\"card_header__1HakP\",\"nameContainer\":\"card_nameContainer__2-ZQG\",\"name\":\"card_name__2dhlq\",\"info\":\"card_info__1cw8n\",\"doc\":\"card_doc__rDS3a\",\"body\":\"card_body__oAjD6\",\"footer\":\"card_footer__oogom\",\"toast\":\"card_toast__2484R\",\"updateButton\":\"card_updateButton__32jtK\",\"deleteButton\":\"card_deleteButton__3a4oO\"};","export const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const ORIGAMI = '/origami';\nexport const ADD = '/post';\nexport const TVMAZE = '/tvdemo';","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport default FirebaseContext;","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport app from 'firebase/compat/app';\nimport 'firebase/compat/auth';\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\n// Initialize Firebase\n// const app = initializeApp(firebaseConfig);\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(firebaseConfig);\n    this.auth = app.auth();\n  }\n  // *** Auth API ***\n\n  // doCreateUserWithEmailAndPassword = (email, password) =>\n  //   this.auth.createUserWithEmailAndPassword(email, password);\n\n  // doSignInWithEmailAndPassword = (email, password) =>\n  //   this.auth.signInWithEmailAndPassword(email, password);\n\n  // doSignOut = () => this.auth.signOut();\n\n  // doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  // doPasswordUpdate = password =>\n  //   this.auth.currentUser.updatePassword(password);\n\n}\n\nexport default Firebase;","import FirebaseContext from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext };","import React, { useState, useEffect } from 'react';\nimport { marked } from 'marked';\nimport hljs from 'highlight.js';\nimport \"highlight.js/styles/github.css\";\nimport\"./gruvbox-dark.css\";\nimport styles from './card.module.css';\nimport * as CODE from \"../constants/codebase\";\n\nconst CodeBlock = (props) => {\n    // Configure marked\n    marked.setOptions({\n        renderer: new marked.Renderer(),\n        highlight: function(code,lang){\n            const language = hljs.getLanguage(lang) ? lang : 'javascript';\n            return hljs.highlight(code, { language }).value;\n          }\n       });\n\n    const getCode = (val) => {\n        if (val == \"REQUEST_PARAM\") return CODE.REQUEST_PARAM;\n        else if (val == \"FLASK_FIRESTORE_SETUP\") return CODE.FLASK_FIRESTORE_SETUP;\n        else if (val == \"REQUIREMENT\") return CODE.REQUIREMENT;\n        else if (val == \"LIST\") return CODE.LIST;\n        else if (val == \"ADD\") return CODE.ADD;\n        else if (val == \"ORIGAMI_MODULE\") return CODE.ORIGAMI_MODULE;\n        else if (val == \"UPDATE\") return CODE.UPDATE;\n        else if (val == \"DELETE\") return CODE.DELETE;\n        else if (val == \"REACT_APP\") return CODE.REACT_APP;\n        else if (val == \"DEPENDENCIES\") return CODE.DEPENDENCIES;\n        else if (val == \"FOLDER_STRUCTURE\") return CODE.FOLDER_STRUCTURE;\n        else if (val == \"FIREBASE_JS\") return CODE.FIREBASE_JS;\n        else if (val == \"INDEX_JS\") return CODE.INDEX_JS;\n        else if (val == \"CONTEXT_JS\") return CODE.CONTEXT_JS;\n        else if (val == \"AUTHENTICATION\") return CODE.AUTHENTICATION;\n        else if (val == \"FORM\") return CODE.FORM;\n        else if (val == \"ORIGAMI\") return CODE.ORIGAMI;\n        else if (val == \"HEROKU\") return CODE.HEROKU;\n\n    }\n\n    return (\n    <div>\n    <div className={styles.containerWithoutBorder}>\n    {/* <p className={styles.doc}>{props.content}</p> */}\n    <div\n        className={styles.doc}\n        dangerouslySetInnerHTML={{ __html: props.content }} \n        />\n    {props.containsCode == \"true\" && <div\n        classPrefix=\"hljs-\"\n        className=\"hljs\"\n        dangerouslySetInnerHTML={{ __html: marked(getCode(props.code)) }} \n        />}\n\n    </div>\n    </div>\n    )\n}\n\nexport default CodeBlock;","export const FLASK_FIRESTORE_SETUP = `\n\\`\\`\\`python\nimport os\nimport requests\nfrom flask import Flask, jsonify, request, make_response\nfrom firebase_admin import credentials, firestore, initialize_app\n\napp = Flask(__name__)\n\n# Initialize Firestore DB\ncred = credentials.Certificate('key.json')\ndefault_app = initialize_app(cred)\ndb = firestore.client()\n\nport = int(os.environ.get('PORT', 8080))\nif __name__ == '__main__':\n    app.run(threaded=True, host='0.0.0.0', port=port)\n\\`\\`\\`\n`;\n\nexport const REQUIREMENT = `\n\\`\\`\\` plaintext\n# requirements.txt\nCacheControl==0.12.10\ncachetools==4.2.4\ncertifi==2021.10.8\ncharset-normalizer==2.0.10\nclick==8.0.3\ndataclasses-json==0.5.6\nfirebase-admin==5.2.0\nFlask==2.0.2\nFlask-Cors==3.0.10\ngoogle-api-core==2.3.2\ngoogle-api-python-client==2.34.0\ngoogle-auth==2.3.3\ngoogle-auth-httplib2==0.1.0\ngoogle-cloud-core==2.2.1\ngoogle-cloud-firestore==2.3.4\ngoogle-cloud-storage==1.43.0\ngoogle-crc32c==1.3.0\ngoogle-resumable-media==2.1.0\ngoogleapis-common-protos==1.54.0\ngrpcio==1.43.0\ngrpcio-status==1.43.0\ngunicorn==20.0.4\n...\n\\`\\`\\`\n`;\n\nexport const LIST = `\n\\`\\`\\`python\n@app.route('/list', methods=['GET'])\ndef read():\n    \"\"\"\n        read() : Fetches documents from Firestore collection as JSON\n        todo : Return document that matches query ID\n        all_todos : Return all documents    \"\"\"\n    try:\n        # details of the request\n        dir_id = request.args.get('collection')  \n\n        print('in collection ' + dir_id)\n        curr_dir = db.collection(dir_id)\n        all_dirs = [doc.to_dict() for doc in curr_dir.stream()]\n        return jsonify(all_dirs), 200\n\\`\\`\\`\n`;\n\nexport const ADD = `\n\\`\\`\\`python\nfrom datamodel.origamimodule import Origami\n\n@app.route('/add', methods=['POST'])\ndef create():\n    try:\n        # details of the request\n        formData = request.json\n        if (formData['collection'] == \"Origami\"):\n            model = Origami(creator=formData['creator_field'], model_name=formData['model_name_field'], \n                            level_of_difficulty=formData['level_of_difficulty_field'],number_of_steps=formData['steps_field'],\n                            source_pattern=formData['source_pattern_link_field'],paper_ratio=formData['paper_ratio_field'],\n                            video_tutorial=formData['video_tutorial_field'],img=formData['img_field'])\n            print(model.to_dict())\n        elif (formData['collection'] == \"Placeholder for some other collection\"):\n            #some other custom datamodel\n        db.collection(formData['collection']).document().set(model.to_dict())\n        return jsonify({\"success\": True}), 200\n    except Exception as e:\n        return f\"An Error Occured: {e}\"\n\\`\\`\\`\n`;\n\nexport const ORIGAMI_MODULE =`\n\\`\\`\\`python\nfrom dataclasses import dataclass\nfrom dataclasses_json import dataclass_json \n\n@dataclass_json\n@dataclass\nclass Origami:\n    model_name:str\n    level_of_difficulty:str\n    number_of_steps:int\n    source_pattern:str\n    creator:str\n    paper_ratio:str\n    video_tutorial:str\n    img:str\n\\`\\`\\`\n`;\n\nexport const UPDATE = `\n\\`\\`\\`python\n@app.route('/update', methods=['POST', 'PUT'])\ndef update():\n    \"\"\"\n        update() : Update document in Firestore collection with request body\n        Ensure you pass a custom ID as part of json body in post request\n        e.g. json={'id': '1', 'title': 'Write a blog post today'}\n    \"\"\"\n    try:\n        # details of the request\n        details = request.json\n        collection_dir = details['collection']\n        name = details['identifier_name']\n        value = details['identifier_value']\n        # get doc id\n        docs = db.collection(collection_dir).where(name, \"==\", value).get()\n        for doc in docs:\n            doc_id = doc.id\n            print(\"doc id: \" + doc_id)\n            break\n\n        # details of the UPDATE request\n        formData = request.json\n        if (formData['collection'] == \"Origami\"):\n            model = Origami(creator=formData['creator_field'], model_name=formData['model_name_field'], \n                            level_of_difficulty=formData['level_of_difficulty_field'],number_of_steps=formData['steps_field'],\n                            source_pattern=formData['source_pattern_link_field'],paper_ratio=formData['paper_ratio_field'],\n                            video_tutorial=formData['video_tutorial_field'],img=formData['img_field'])\n            print(model.to_dict())\n        \n        db.collection(formData['collection']).document(doc_id).update(model.to_dict())\n        return jsonify({\"success\": True}), 200\n\n    except Exception as e:\n        return f\"An Error Occured: {e}\"\n\\`\\`\\`\n`;\n\nexport const DELETE = `\n\\`\\`\\`python\n@app.route('/delete', methods=['GET', 'DELETE'])\ndef delete():\n    try:\n        # details of the request\n        details = request.json\n        collection_dir = details['collection']\n        name = details['identifier_name']\n        value = details['identifier_value']\n        print(collection_dir, name, value)\n        # check if the document exists\n        docs = db.collection(collection_dir).where(name, \"==\", value).get()\n        exists = False\n        for doc in docs:\n            doc_id = doc.id\n            exists = True\n            print(\"this doc exists\")\n            break\n        if exists:\n            db.collection(collection_dir).document(doc_id).delete()\n            print('deleted successfully for '+value)\n            return jsonify({\"success\": True}), 200\n        else:\n            print(\"no doc found\")\n            return jsonify({\"fail\": \"Document you are trying to delete does not exist\"})\n    except Exception as e:\n        print(e)\n        return f\"An Error Occured: {e}\"\n\\`\\`\\`\n`;\n\nexport const REACT_APP = `\n    npx create-react-app NAME_OF_YOUR_FRONTEND_UI\n    cd NAME_OF_YOUR_FRONTEND_UI\n    npm start\n`;\n\nexport const DEPENDENCIES = `\n    \"dependencies\": {\n        \"@testing-library/jest-dom\": \"^5.11.4\",\n        \"@testing-library/react\": \"^11.1.0\",\n        \"@testing-library/user-event\": \"^12.1.10\",\n        \"bootstrap\": \"^5.1.3\",\n        \"firebase\": \"^9.6.1\",\n        \"highlight.js\": \"^11.3.1\",\n        \"marked\": \"^4.0.8\",\n        \"react\": \"^17.0.2\",\n        \"react-bootstrap\": \"^2.0.3\",\n        \"react-bootstrap-range-slider\": \"^3.0.3\",\n        \"react-dom\": \"^17.0.2\",\n        \"react-firebase-hooks\": \"^4.0.1\",\n        \"react-router-dom\": \"^6.1.1\",\n        \"react-scripts\": \"4.0.3\",\n        \"styled-components\": \"^5.3.3\",\n        \"web-vitals\": \"^1.0.1\"}\n`;\n\nexport const FOLDER_STRUCTURE = `\n\\`\\`\\`plaintext\nsrc/\n    index.js\n    index.css // Styling\n    App.js // Routing\n    Home.js // Landing Page, where you are reading this design doc\n    Origami.js // Page to READ/view existing documents\n    Add.js // Forms to CREATE new documents\n    TVmazeDemo.js // Misc: demo-ing TV Maze's API as practice\n\nsrc/constants/\n        codebase.js // Storing all the code chunks you are seeing here\n        routes.js // What it sounds like, routing\n\nsrc/Subpages/\n        AddOrigami.js // Form to add new origami document\n        AddUser.js // Form to add new user\n        UpdateOrigami.js // Form to update origami document fields\n        UpdateUser.js // Form to update user fields\n\nsrc/components/\n        card.module.css // Styling for OrigamiCard.js\n        gruvbox-dark.css // Styling for these code chunks\n        styles.module.css // General Styling\n        Navbar.js \n        OrigamiCard.js // Rendering documents in Origami Collection from Firestore DB\n        CodeBlock.js // Rendering codechunks from codebase.js\n        DesignDoc.json // Storing all the paragraphs you are reading here\n\nsrc/components/Auth/\n            Admin.js\n            SignIn.js\n            SignUp.js\n\nsrc/components/Auth/Firebase/\n                firebase.js\n                context.js\n                index.js\n\\`\\`\\`\n`;\n\nexport const FIREBASE_JS = `\n    // Import the functions you need from the SDKs you need\n    import { initializeApp } from \"firebase/app\";\n    import { getAnalytics } from \"firebase/analytics\";\n    import app from 'firebase/compat/app';\n    import 'firebase/compat/auth';\n\n    // TODO: Add SDKs for Firebase products that you want to use\n    // https://firebase.google.com/docs/web/setup#available-libraries\n\n    // Your web app's Firebase configuration\n    // For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\n    const firebaseConfig = {\n        apiKey: process.env.REACT_APP_API_KEY,\n        authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n        projectId: process.env.REACT_APP_PROJECT_ID,\n        storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n        messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n        appId: process.env.REACT_APP_ID,\n        measurementId: process.env.REACT_APP_MEASUREMENT_ID\n    };\n    class Firebase {\n        constructor() {\n        app.initializeApp(firebaseConfig);\n        this.auth = app.auth();\n        }\n    }\n\n    export default Firebase;\n`;\n\nexport const CONTEXT_JS = `\n    import React from 'react';\n\n    const FirebaseContext = React.createContext(null);\n\n    export default FirebaseContext;\n`;\n\nexport const INDEX_JS = `\n    import FirebaseContext from './context';\n    import Firebase from './firebase';\n\n    export default Firebase;\n\n    export { FirebaseContext };\n`;\n\nexport const REQUEST_PARAM = `\n\\`\\`\\`python\n@dataclass\ndef Delete:\n    collection:str #which collection within Firebase you are trying to update\n    identifier_name:str // in Origami, it will be model_name; User, it will be username\n    identifier_value:str // the actual value the identifier field holds in firestore\n\n@dataclass\ndef Update:\n    collection:str #which collection within Firebase you are trying to update\n    identifier:str // in Origami, it will be model_name; User, it will be username\n\\`\\`\\`\n`;\n\n\nexport const AUTHENTICATION = `\n    import React, { useState, useEffect } from 'react';\n    import { useAuthState } from 'react-firebase-hooks/auth';\n    import { getAuth} from 'firebase/auth';\n\n    const User = () => {\n        const auth = getAuth()\n        const [user, loading, error] = useAuthState(auth);\n        if (user) {\n            const displayName = user.displayName;\n            const email = user.email;\n            const photoURL = user.photoURL;\n            const emailVerified = user.emailVerified;\n        }\n        \n        return (\n            <main>\n            {!user && <div message=\"To view Design Doc, please Log in\"/>}\n            {user && <div message=\"Only Admins can see this message!\"/>}\n            </main>\n        );\n    }\n\n    export default User;\n`;\n\nexport const FORM = `\n    const SignInForm = () => {\n        const ...;\n    \n        return (\n        <Form className=\"mb-4\">\n            <h2 className=\"title\">Sign In</h2>\n            <Form.Group className=\"mb-4\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control \n                    type=\"email\" \n                    placeholder=\"Enter Email\" \n                    name = \"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}/>\n            </Form.Group>\n            <Form.Group className=\"mb-4\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control \n                    type=\"password\" \n                    placeholder=\"Enter Password\" \n                    name = \"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}/>\n            </Form.Group>\n            <Button \n                    bsPrefix=\"customButton\"\n                    variant=\"success\" \n                    onClick={() => signInWithEmailAndPassword(email, password)}\n                    >\n                    Sign In\n            </Button>\n            {error && <p>Error: {error.message}</p>}\n            {loading && <p>Loading...</p>}\n            {/* Successful Log-in is being handled in Navbar.js */}\n        </Form>\n        );\n    };\n    \n    export default SignInForm;\n`;\n\nexport const ORIGAMI = `\n    import React, { useState, useEffect } from 'react';\n    import OrigamiCard from './components/OrigamiCard';\n    import { Button, Form, Offcanvas } from 'react-bootstrap';\n    import RangeSlider from 'react-bootstrap-range-slider';\n    import 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\n\n    const Origami = () => {\n        const [rerenderTrig, setRerenderTrig] = useState(0)\n        const [origami, setOrigami] = useState([])\n        const [filters, setFilters] = useState({\n            ...\n        })\n\n        useEffect(() => {\n            const urlParameters = Object.entries(filters).map(e => e.join('=')).join('&')\n            fetch('http://127.0.0.1:5000/list?' + String(urlParameters), {\n                'method':'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            .then( async (response) => {\n                // get json response here\n                let data = await response.json();\n                \n                if(response.status === 200){\n                // Process data here\n                    setNoResult(false)\n                    setOrigami(data)\n                    console.log(Object.keys(origami).length)\n                    console.log(origami)\n                    // setFilteredResultShow(true)\n                }else{\n                // Rest of status codes (400,500,303), can be handled here appropriately\n                    console.log(\"status code is prob 90 and no results from selected filters\")\n                    setNoResult(true)\n                    // setFilteredResultShow(true)\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n\n        },[rerenderTrig]) // important to have [] so that it doesn't repeatedly make Get request\n\n        return (\n                <main>\n                    <div>\n        \n                    {noResult && <h2 className=\"title\"> \n                                Yikes, the filter selected didn't return any creations, please try a different filter!\n                                </h2>}\n                \n                    {!noResult && origami.map(model => {\n                        return (\n                            <div key = {model.model_name}>\n                                <OrigamiCard\n                                    name={model.model_name}\n                                    creator={model.creator}\n                                    difficulty_level={model.level_of_difficulty}\n                                    video_tutorial={model.video_tutorial}\n                                    source={model.source_pattern}\n                                    steps={model.number_of_steps}\n                                    paper={model.paper_ratio}\n                                    img={model.img}\n                                />\n                            </div>\n                        )\n                        })}\n                </div>\n            </main>\n        );\n    }\n\n    export default Origami;\n`;\n\nexport const HEROKU = `\n\\`\\`\\`shell\necho \"web: gunicorn app:app\" > Procfile\n\\`\\`\\`\n`;\n\nexport const CODE = `React + marked + highlight.js\n\n\n    import marked from \"marked\";\n\n    marked.setOptions({\n    langPrefix: \"hljs language-\",\n    highlight: function(code) {\n        return require(\"highlight.js\").highlightAuto(code, [\"html\", \"javascript\"])\n        .value;\n    }\n    });\n\n    @app.route('/list', methods=['GET'])\n    def read():\n        \"\"\"\n        read() : Fetches documents from Firestore collection as JSON\n        todo : Return document that matches query ID\n        all_todos : Return all documents    \"\"\"\n    try:\n        # details of t\n    \n    `;","import React, { useState, useEffect } from 'react';\nimport  { FirebaseContext } from './components/Auth/Firebase';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { getAuth} from 'firebase/auth';\nimport CodeBlock from './components/CodeBlock';\nimport designDoc from \"./components/DesignDoc.json\";\n\nconst Home = () => {\n    const auth = getAuth()\n    const [user, loading, error] = useAuthState(auth);\n    if (user) {\n        const displayName = user.displayName;\n        const email = user.email;\n        const photoURL = user.photoURL;\n        const emailVerified = user.emailVerified;\n        console.log(email)\n\n    }\n    \n    return (\n        <main>\n            <div className=\"container\">\n                {user && <div> \n                    <h2 className=\"contentTitle\">Welcome, Admin {auth.currentUser.displayName} to the README.md</h2> \n                    \n                </div>}\n\n                {!user && <div> \n                    <h2 className=\"contentTitle\">README.md </h2> \n                    \n                </div>}\n                \n                {designDoc.map(section => {\n                    return (\n                        <div key = {section.section_id}>\n                            <h3 className=\"contentTitle\">{section.section_id} - {section.title}</h3>\n                            {section.details.map(para => {\n                                return (\n                                    <CodeBlock\n                                        content={para.content}\n                                        containsCode={para.contains_code}\n                                        code={para.code}\n                                        codeLang={para.code_lang}\n                                        />\n                                )\n                            })}\n                        </div>\n                    )\n                })}\n            </div>\n        </main>\n    );\n}\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst UpdateOrigami = (props) => {\n    const [formData, setFormData] = useState({\n        collection:'Origami', // Hardcoded according to which collection this js page componant is fore\n        identifier_name:'model_name',\n        identifier_value:props.name,\n        model_name_field:props.name,\n        creator_field:props.creator,\n        level_of_difficulty_field:props.difficulty_level,\n        steps_field:props.steps,\n        source_pattern_link_field:props.source,\n        paper_ratio_field:props.paper,\n        video_tutorial_field:props.video_tutorial,\n        img_field:props.img\n    })\n\n    const [isLoading, setIsLoading] = useState(false)\n    const handleFirestore = (event) => {\n        // const datamodel = formData;\n        console.log(formData)\n        setIsLoading(true)\n        fetch('https://firebase-admin-console-api.herokuapp.com/update', {\n            'method':'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(formData)\n        })\n        .then(resp => resp.json())\n        .then(resp => {\n            setIsLoading(false)\n            console.log(resp.result)})\n        .catch(error => {\n            setIsLoading(false)\n            console.log(error)})\n        \n    }\n    return (\n        <main>\n            <div className=\"container\">\n            <Form className=\"form\">\n                <h2 className=\"title\">Details on Model {formData.identifier_value}</h2>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Model Name</Form.Label>\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Enter Model Name\" \n                        name = \"model_name_field\"\n                        value={formData.model_name_field}\n                        onChange={e => setFormData((formData) => ({\n                            ...formData,\n                            model_name_field: e.target.value,\n                        }))}/>\n                    {/* <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                    </Form.Text> */}\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Creator</Form.Label>\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Enter Model Creator\" \n                        name = \"creator_field\"\n                        value={formData.creator_field}\n                        onChange={e => setFormData((formData) => ({\n                            ...formData,\n                            creator_field: e.target.value,\n                        }))}/>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Level of Difficulty</Form.Label>\n                    <Form.Control \n                        as=\"select\" \n                        name = \"level_of_difficulty_field\"\n                        value={formData.level_of_difficulty_field}\n                        onChange={e => setFormData((formData) => ({\n                            ...formData,\n                            level_of_difficulty_field: e.target.value,\n                        }))}>\n                        <option>low</option>\n                        <option>medium</option>\n                        <option>high</option>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Steps</Form.Label>\n                    <Form.Control \n                        type=\"number\" \n                        placeholder=\"Roughly steps estimate\" \n                        name = \"steps_field\"\n                        value={formData.steps_field}\n                        onChange={e => setFormData((formData) => ({\n                            ...formData,\n                            steps_field: Number(e.target.value),\n                        }))}/>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Paper Ratio</Form.Label>\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Dimension or any relevant details\" \n                        name = \"paper_ratio_field\"\n                        value={formData.paper_ratio_field}\n                        onChange={e => setFormData((formData) => ({\n                            ...formData,\n                            paper_ratio_field: e.target.value,\n                        }))}/>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Source</Form.Label>\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Link to pattern\" \n                        name = \"source_pattern_link_field\"\n                        value={formData.source_pattern_link_field}\n                        onChange={e => setFormData((formData) => ({\n                            ...formData,\n                            source_pattern_link_field: e.target.value,\n                        }))}/>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Video</Form.Label>\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Link to youtube\" \n                        name = \"video_tutorial_field\"\n                        value={formData.video_tutorial_field}\n                        onChange={e => setFormData((formData) => ({\n                            ...formData,\n                            video_tutorial_field: e.target.value,\n                        }))}/>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Image</Form.Label>\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Link to your work\" \n                        name = \"img_field\"\n                        value={formData.img_field}\n                        onChange={e => setFormData((formData) => ({\n                            ...formData,\n                            img_field: e.target.value,\n                        }))}/>\n                </Form.Group>\n\n                <Button \n                    bsPrefix=\"customButton\"\n                    variant=\"success\" \n                    onClick={!isLoading? handleFirestore: null}\n                    >\n                    {isLoading ? 'Connecting to Firestore':'Send to Firestore'}\n                </Button>\n            {isLoading && <div class='success-message'>SENDING TO FIRESTORE MODEL: {formData.model_name_field}</div>}\n            {!isLoading && <div class='success-message'>Nothing yet</div>}\n            \n            </Form>\n\n            </div>\n        </main>\n    );\n}\n\nexport default UpdateOrigami;","import styles from './card.module.css'\nimport {Button, Offcanvas, Toast, OverlayTrigger, Tooltip} from 'react-bootstrap'\nimport { useState } from 'react'\nimport UpdateOrigami from '../Subpages/UpdateOrigami'\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { getAuth } from 'firebase/auth';\n\nconst OrigamiCard = (props) => {\n    const auth = getAuth()\n    const [user, loading, error] = useAuthState(auth);\n\n    const [model, setModel] = useState('hi')\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n\n    // const [confirm, setConfirm] = useState(false);\n    const handleDelete = (e) => {\n        console.log(e.target.id + \"will be set as the model to delete\")\n        setModel(e.target.id)\n        setShow(true)\n    }\n\n    const deleteRequest = () => {\n        console.log(\"Ready to delete model \"+model);\n        setShow(false)\n        fetch('https://firebase-admin-console-api.herokuapp.com/delete', {\n                'method':'DELETE',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({collection: 'Origami',\n                                    identifier_value: model,\n                                    identifier_name: 'model_name'})\n            })\n            .then(resp => resp.json())\n            .then(resp => {\n                console.log(resp.result)})\n            .catch(error => {\n                console.log(error)})\n        setModel('')\n    }\n    const [showUpdate, setShowUpdate] = useState(false);\n    const handleCloseToast = () => setShowUpdate(false);\n    const handleUpdate = (e) => {\n        console.log(e.target.id)\n        // setModel(e.target.id)\n        setShowUpdate(true)\n    }\n\n    return(\n        <div>\n        <div className={styles.container}>\n            <div className={styles.contentContainer}>\n                <div className={styles.header}>\n                    <div className={styles.nameContainer}>\n                        <h2 className={styles.name}>\n                            {props.name === \"\" ? \"Anonymous\" : props.name}\n                        </h2>\n                    </div>\n                </div>\n                <div className={styles.content}>\n                    <p className={styles.info}>Creator: {props.creator}</p>\n                    <p className={styles.headline}>Difficulty: {props.difficulty_level}</p>\n                    <p className={styles.info}>Number of steps: {props.steps}</p>\n                    <p className={styles.info}>Paper: {props.paper}</p>\n                    <a className={styles.body} href={props.source}>Learn more</a>\n                    <div className={styles.header}>\n                        {user? <Button \n                            bsPrefix={styles.updateButton}\n                            onClick={handleUpdate}\n                            > Update\n                        </Button> :\n                        <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Admin&nbsp;Access&nbsp;Only</Tooltip>}>\n                            <span className=\"d-inline-block\">\n                                <Button disabled style={{ pointerEvents: 'none' }} bsPrefix={styles.updateButton}>\n                                Update\n                                </Button>\n                            </span>\n                        </OverlayTrigger>}\n\n                        {user? <Button \n                            bsPrefix={styles.deleteButton}\n                            id={props.name}\n                            onClick={handleDelete}\n                            > Delete\n                        </Button> :\n                        <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Admin&nbsp;Access&nbsp;Only</Tooltip>}>\n                            <span className=\"d-inline-block\">\n                                <Button disabled style={{ pointerEvents: 'none' }} bsPrefix={styles.deleteButton}>\n                                Delete\n                                </Button>\n                            </span>\n                        </OverlayTrigger>}\n                        \n                        {/* Below are Admin Access */}\n                        <Offcanvas show={show} onHide={handleClose}>\n                            <Offcanvas.Header closeButton>\n                            <Offcanvas.Title>Confirmation to delete document</Offcanvas.Title>\n                            </Offcanvas.Header>\n                            <Offcanvas.Body>\n                            Are you sure you want to delete model \"{props.name}\" by {props.creator}? \n                            This operation would not be reversible!\n                            <div>\n                                <Button \n                                bsPrefix={styles.updateButton}\n                                onClick={deleteRequest}\n                                > Confirm Deletion\n                                </Button>\n                            </div>\n                            </Offcanvas.Body>\n                        </Offcanvas>\n                    </div>\n                </div>\n            </div>\n            <div className={styles.videoContainer}>\n                {props.video_tutorial === null? (\n                    <img\n                    className={styles.contentContainer}\n                    src=\"https://user-images.githubusercontent.com/55526292/142744172-24078c53-b7f9-4ec7-8884-2b55465dc40d.png\" />\n                ):(\n                    <iframe width=\"100%\" height=\"100%\" src={getId(props.video_tutorial)} frameborder=\"0\" allowfullscreen></iframe>\n                )}\n            </div>\n        </div>\n        <Toast show={showUpdate} onClose={handleCloseToast} bsPrefix={styles.toast}>\n            <Toast.Header>\n                <strong className=\"me-auto\">{props.name}</strong>\n                <small>Updating</small>\n            </Toast.Header>\n            <Toast.Body>\n                <UpdateOrigami \n                    name={props.name}\n                    creator={props.creator}\n                    difficulty_level={props.difficulty_level}\n                    video_tutorial={props.video_tutorial}\n                    source={props.source}\n                    steps={props.steps}\n                    paper={props.paper}\n                    img={props.img}\n                />\n            </Toast.Body>\n        </Toast>\n        </div>\n    );\n}\n\nfunction getId(url) {\n    // const regExp = \"/^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/\";\n    // const match = url.match(regExp);\n    const match = url.split(\"=\");\n\n    return \"//www.youtube.com/embed/\" + match[1];\n}\n\nexport default OrigamiCard;","import React, { useState, useEffect } from 'react';\nimport OrigamiCard from './components/OrigamiCard';\nimport { Button, Form, Offcanvas } from 'react-bootstrap';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\n\nconst Origami = () => {\n\n    const [rerenderTrig, setRerenderTrig] = useState(0)\n    const [origami, setOrigami] = useState([])\n    const [filters, setFilters] = useState({\n        collection:'Origami',\n        filter_applied:'false',\n        difficulty: '',\n        low_steps: 0,\n        high_steps: 1000,\n        order_by: '',\n    })\n\n    useEffect(() => {\n        console.log(filters)\n        console.log(\"we are in useEffect with a value of rerenderTrig of \" + rerenderTrig)\n        const urlParameters = Object.entries(filters).map(e => e.join('=')).join('&')\n        console.log(urlParameters);\n\n        fetch('https://firebase-admin-console-api.herokuapp.com/list?' + String(urlParameters), {\n            'method':'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then( async (response) => {\n            // get json response here\n            let data = await response.json();\n            \n            if(response.status === 200){\n            // Process data here\n                setNoResult(false)\n                setOrigami(data)\n                console.log(Object.keys(origami).length)\n                console.log(origami)\n                // setFilteredResultShow(true)\n            }else{\n            // Rest of status codes (400,500,303), can be handled here appropriately\n                console.log(\"status code is prob 90 and no results from selected filters\")\n                setNoResult(true)\n                // setFilteredResultShow(true)\n            }\n        })\n        .catch((err) => {\n            console.log(err);\n        })\n\n    },[rerenderTrig]) // important to have [] so that it doesn't repeatedly make Get request\n\n    const [noResult, setNoResult] = useState(false)\n    const [filteredResultShow, setFilteredResultShow] = useState(false)\n    const [show, setShow] = useState(false)\n    const handleClose = () => {setShow(false)}\n    \n\n    const handleFirestore = (event) => {\n        console.log(\"in HandleFirestore\")\n        // setFilteredResultShow(true)\n        setFilters((filters) => ({\n            ...filters,\n            filter_applied:'true',\n        }))\n        setRerenderTrig(rerenderTrig+1) // no much sig besides triggering useEffect\n        console.log(\"Should be retriggering useEffect\")\n\n    }\n\n    return (\n        <main>\n            <div className=\"container\">\n                <h2 className=\"title\">Welcome to my Origami Blog</h2>\n                <Button \n                        bsPrefix=\"customButton\"\n                        variant=\"success\" \n                        onClick={() => setShow(true)}\n                        >\n                        Apply Filters\n                </Button>\n                <Offcanvas show={show} onHide={handleClose}>\n                    <Offcanvas.Header closeButton>\n                        <Offcanvas.Title className=\"title\">Put in some filters</Offcanvas.Title>\n                    </Offcanvas.Header>\n                    <Offcanvas.Body>\n                    <Form className=\"mb-4\">\n                            <Form.Group className=\"mb-4\">\n                                <Form.Label>Difficulty Level</Form.Label>\n                                <Form.Control \n                                    as=\"select\"\n                                    name = \"difficulty\"\n                                    value={filters.difficulty}\n                                    onChange={(e) => setFilters((filters) => ({\n                                        ...filters,\n                                        difficulty: e.target.value,\n                                    }))}>\n                                    <option selected=\"true\"></option>\n                                    <option>low</option>\n                                    <option>medium</option>\n                                    <option>high</option>\n                                    </Form.Control>\n                            </Form.Group>\n                            <Form.Group className=\"mb-4\">\n                                <Form.Label>Order By Step Numbers</Form.Label>\n                                <Form.Control \n                                    as=\"select\"\n                                    name = \"order_by\"\n                                    value={filters.order_by}\n                                    onChange={(e) => setFilters((filters) => ({\n                                        ...filters,\n                                        order_by: e.target.value,\n                                    }))}>\n                                    <option selected=\"true\"></option>\n                                    <option>desc</option>\n                                    <option>asc</option>\n                                </Form.Control>\n                            </Form.Group>\n                            <Form.Group className=\"mb-4\">\n                                <Form.Label className=\"title\">Steps Ranges</Form.Label>\n                                <br/>\n                                <Form.Label>From</Form.Label>\n                                <RangeSlider\n                                    value={filters.low_steps}\n                                    onChange={e => setFilters((filters) => ({\n                                        ...filters,\n                                        low_steps: Number(e.target.value),\n                                    }))}\n                                    variant='info'\n                                    min={0}\n                                    max={1000}\n                                />\n                                <Form.Label>Up To</Form.Label>\n                                <RangeSlider\n                                    value={filters.high_steps}\n                                    onChange={e => setFilters((filters) => ({\n                                        ...filters,\n                                        high_steps: Number(e.target.value),\n                                    }))}\n                                    variant='info'\n                                    min={filters.low_steps}\n                                    max={1000}\n                                />\n                            </Form.Group>\n                            <Button \n                                    bsPrefix=\"customButton\"\n                                    variant=\"success\" \n                                    onClick={() => handleFirestore()}\n                                    >\n                                    Filter\n                            </Button>\n                        </Form>\n                    </Offcanvas.Body>\n                </Offcanvas>\n                {/* Put in !filteredResultShow for now to see how to handle no return */}\n                {noResult && <h2 className=\"title\"> \n                                    Yikes, the filter selected didn't return any creations, please try a different filter!\n                                    </h2>}\n                \n                {!noResult && origami.map(model => {\n                    return (\n                        <div key = {model.model_name}>\n                            <OrigamiCard\n                                name={model.model_name}\n                                creator={model.creator}\n                                difficulty_level={model.level_of_difficulty}\n                                video_tutorial={model.video_tutorial}\n                                source={model.source_pattern}\n                                steps={model.number_of_steps}\n                                paper={model.paper_ratio}\n                                img={model.img}\n                            />\n                        </div>\n                    )\n                })}\n            </div>\n        </main>\n    );\n}\n\nexport default Origami;","import React, { useState, useEffect } from 'react';\nimport { Form, Button, Tooltip, OverlayTrigger } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { getAuth } from 'firebase/auth';\n\nconst AddOrigami = () => {\n    const auth = getAuth()\n    const [user, loading, error] = useAuthState(auth);\n\n    const [formData, setFormData] = useState({\n        collection:'Origami', // Hardcoded according to which collection this js page componant is fore\n        model_name_field:'',\n        creator_field:'',\n        level_of_difficulty_field:'low',\n        steps_field:0,\n        source_pattern_link_field:'',\n        paper_ratio_field:'',\n        video_tutorial_field:'',\n        img_field:''\n    })\n\n    const [isLoading, setIsLoading] = useState(false)\n    const [result, setResult] = useState('')\n    const handleFirestore = (event) => {\n        // const datamodel = formData;\n        console.log(formData)\n        setIsLoading(true)\n        fetch('https://firebase-admin-console-api.herokuapp.com/add', {\n            'method':'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(formData)\n        })\n        .then(resp => resp.json())\n        .then(resp => {\n            setIsLoading(false)\n            setResult(resp.result)})\n        .catch(error => {\n            setIsLoading(false)\n            console.log(error)})\n        \n    }\n    return (\n        <main>\n            <div className=\"containerWithBorder\">\n            <Form className=\"form\">\n                <h2 className=\"title\">Add to the collection!</h2>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Model Name</Form.Label>\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Enter Model Name\" \n                        name = \"model_name_field\"\n                        value={formData.model_name_field}\n                        onChange={e => setFormData((formData) => ({\n                            ...formData,\n                            model_name_field: e.target.value,\n                        }))}/>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Creator</Form.Label>\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Enter Model Creator\" \n                        name = \"creator_field\"\n                        value={formData.creator_field}\n                        onChange={e => setFormData((formData) => ({\n                            ...formData,\n                            creator_field: e.target.value,\n                        }))}/>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Level of Difficulty</Form.Label>\n                    <Form.Control \n                        as=\"select\" \n                        name = \"level_of_difficulty_field\"\n                        value={formData.level_of_difficulty_field}\n                        onChange={e => setFormData((formData) => ({\n                            ...formData,\n                            level_of_difficulty_field: e.target.value,\n                        }))}>\n                        <option>low</option>\n                        <option>medium</option>\n                        <option>high</option>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Steps</Form.Label>\n                    <Form.Control \n                        type=\"number\" \n                        placeholder=\"Roughly steps estimate\" \n                        name = \"steps_field\"\n                        value={formData.steps_field}\n                        onChange={e => setFormData((formData) => ({\n                            ...formData,\n                            steps_field: Number(e.target.value),\n                        }))}/>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Paper Ratio</Form.Label>\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Dimension or any relevant details\" \n                        name = \"paper_ratio_field\"\n                        value={formData.paper_ratio_field}\n                        onChange={e => setFormData((formData) => ({\n                            ...formData,\n                            paper_ratio_field: e.target.value,\n                        }))}/>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Source</Form.Label>\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Link to pattern\" \n                        name = \"source_pattern_link_field\"\n                        value={formData.source_pattern_link_field}\n                        onChange={e => setFormData((formData) => ({\n                            ...formData,\n                            source_pattern_link_field: e.target.value,\n                        }))}/>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Video</Form.Label>\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Link to youtube\" \n                        name = \"video_tutorial_field\"\n                        value={formData.video_tutorial_field}\n                        onChange={e => setFormData((formData) => ({\n                            ...formData,\n                            video_tutorial_field: e.target.value,\n                        }))}/>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Image</Form.Label>\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Link to your work\" \n                        name = \"img_field\"\n                        value={formData.img_field}\n                        onChange={e => setFormData((formData) => ({\n                            ...formData,\n                            img_field: e.target.value,\n                        }))}/>\n                </Form.Group>\n\n                {user? <Button \n                    bsPrefix=\"customButton\"\n                    variant=\"success\" \n                    onClick={!isLoading? handleFirestore: null}\n                    >\n                    {isLoading ? 'Connecting to Firestore':'Send to Firestore'}\n                </Button>:\n                <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Admin&nbsp;Access&nbsp;Only</Tooltip>}>\n                    <span className=\"d-inline-block\">\n                        <Button disabled style={{ pointerEvents: 'none' }} bsPrefix=\"customButton\">\n                        Send to Firestore\n                        </Button>\n                    </span>\n                </OverlayTrigger>}\n            {isLoading && <div class='success-message'>SENDING TO FIRESTORE MODEL: {formData.model_name_field}</div>}\n            {!isLoading && <div class='success-message'>Nothing yet</div>}\n            \n            </Form>\n\n            </div>\n        </main>\n    );\n}\n\nexport default AddOrigami;","import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst AddUser = () => {\n    const [formData, setFormData] = useState({\n        collection:'Users', // Hardcoded according to which collection this js page componant is fore\n        model_name_field:'',\n        creator_field:'',\n        level_of_difficulty_field:'low',\n        steps_field:0,\n        source_pattern_link_field:'',\n        paper_ratio_field:'',\n        video_tutorial_field:'',\n        img_field:''\n    })\n\n    const [isLoading, setIsLoading] = useState(false)\n    const [result, setResult] = useState('')\n    const handleFirestore = (event) => {\n        // const datamodel = formData;\n        console.log(formData)\n        setIsLoading(true)\n        fetch('https://firebase-admin-console-api.herokuapp.com/add', {\n            'method':'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(formData)\n        })\n        .then(resp => resp.json())\n        .then(resp => {\n            setIsLoading(false)\n            setResult(resp.result)})\n        .catch(error => {\n            setIsLoading(false)\n            console.log(error)})\n        \n    }\n    return (\n        <main>\n            <div className=\"containerWithBorder\">\n            <Form className=\"form\">\n                <h2 className=\"title\">Adding New User</h2>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Enter Model Name\" \n                        name = \"model_name_field\"\n                        value={formData.model_name_field}\n                        onChange={e => setFormData((formData) => ({\n                            ...formData,\n                            model_name_field: e.target.value,\n                        }))}/>\n                    {/* <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                    </Form.Text> */}\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Creator</Form.Label>\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Enter Model Creator\" \n                        name = \"creator_field\"\n                        value={formData.creator_field}\n                        onChange={e => setFormData((formData) => ({\n                            ...formData,\n                            creator_field: e.target.value,\n                        }))}/>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Level of Difficulty</Form.Label>\n                    <Form.Control \n                        as=\"select\" \n                        name = \"level_of_difficulty_field\"\n                        value={formData.level_of_difficulty_field}\n                        onChange={e => setFormData((formData) => ({\n                            ...formData,\n                            level_of_difficulty_field: e.target.value,\n                        }))}>\n                        <option>low</option>\n                        <option>medium</option>\n                        <option>high</option>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Steps</Form.Label>\n                    <Form.Control \n                        type=\"number\" \n                        placeholder=\"Roughly steps estimate\" \n                        name = \"steps_field\"\n                        value={formData.steps_field}\n                        onChange={e => setFormData((formData) => ({\n                            ...formData,\n                            steps_field: Number(e.target.value),\n                        }))}/>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Paper Ratio</Form.Label>\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Dimension or any relevant details\" \n                        name = \"paper_ratio_field\"\n                        value={formData.paper_ratio_field}\n                        onChange={e => setFormData((formData) => ({\n                            ...formData,\n                            paper_ratio_field: e.target.value,\n                        }))}/>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Source</Form.Label>\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Link to pattern\" \n                        name = \"source_pattern_link_field\"\n                        value={formData.source_pattern_link_field}\n                        onChange={e => setFormData((formData) => ({\n                            ...formData,\n                            source_pattern_link_field: e.target.value,\n                        }))}/>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Video</Form.Label>\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Link to youtube\" \n                        name = \"video_tutorial_field\"\n                        value={formData.video_tutorial_field}\n                        onChange={e => setFormData((formData) => ({\n                            ...formData,\n                            video_tutorial_field: e.target.value,\n                        }))}/>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Image</Form.Label>\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Link to your work\" \n                        name = \"img_field\"\n                        value={formData.img_field}\n                        onChange={e => setFormData((formData) => ({\n                            ...formData,\n                            img_field: e.target.value,\n                        }))}/>\n                </Form.Group>\n\n                <Button \n                    bsPrefix=\"customButton\"\n                    variant=\"success\" \n                    onClick={!isLoading? handleFirestore: null}\n                    >\n                    {isLoading ? 'Connecting to Firestore':'Send to Firestore'}\n                </Button>\n            {isLoading && <div class='success-message'>SENDING TO FIRESTORE MODEL: {formData.model_name_field}</div>}\n            {!isLoading && <div class='success-message'>Nothing yet</div>}\n            \n            </Form>\n\n            </div>\n        </main>\n    );\n}\n\nexport default AddUser;","import React, { useState, useEffect } from 'react';\nimport { Dropdown, DropdownButton } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AddOrigami from './Subpages/AddOrigami';\nimport AddUser from './Subpages/AddUser';\n\nconst Add = () => {\n    const [collection, setCollection] = useState('')\n    return (\n        <main>\n            <div className=\"container\">\n                <DropdownButton \n                    bsPrefix=\"customButton\"\n                    key=\"collection\"\n                    id=\"dropdown-variants-success\"\n                    variant=\"success\"\n                    title=\"Please select the collection you are attempting to Add document(s) to:\"\n                    onSelect={(e) => setCollection(e)}>\n                    <Dropdown.Item eventKey=\"Origami\">Origami</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"Users\">Users (Make sure you have permission) </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"\"> Placeholder </Dropdown.Item>\n                </DropdownButton>\n                {collection =='' && <div class=''>No collection selected yet! </div>}\n                {collection =='Origami' && <AddOrigami/>}\n                {collection =='Users' && <AddUser/>}\n            </div>\n        </main>\n    );\n}\n\nexport default Add;","import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst TVmaze = () => {\n\n    const [projects, setProjects] = useState([])\n\n    const [showname, setShowname] = useState({show: ''})\n    const [message, setMessage] = useState('Look up a show and query all the episodes')\n    const queryShow = () => {\n        fetch('https://firebase-admin-console-api.herokuapp.com/test?show='+String(showname.show))\n        .then(resp => resp.json())\n        .then(resp => {\n            console.log(resp)\n            setProjects(resp)\n            setMessage('Query successfully for the Show \"'+showname.show+'\", see below for details')\n        })\n        // .then(resp => setProjects(resp.data.json()))\n        .catch(error => {\n            setMessage(\"Sorry, the show you put in wasn't found, but you should make it!! \")\n            console.log(error)})\n    }\n    return (\n        <main>\n            <div className=\"container\">\n                {/* <h2>Pick a TV show: </h2> */}\n                <Form>\n                    <h2 className=\"title\">Enter a TV Show: </h2>\n                    <Form.Group className=\"mb-3\">\n                        <Form.Label>All episodes</Form.Label>\n                        <Form.Control \n                            type=\"text\" \n                            placeholder=\"Enter Show Name\" \n                            name = \"show\"\n                            value={showname.show}\n                            onChange={e => setShowname((showname) => ({\n                                ...showname,\n                                show: e.target.value\n                            }))}\n                            />\n                    </Form.Group>\n                    <Button \n                        variant=\"success\" \n                        onClick={queryShow}>\n                        Get Episodes\n                    </Button>\n                </Form>\n                <div className=\"form\">\n                    <p>Note: {message}</p>\n                    {projects && projects.map(project => {\n                        return (\n                            <div key = {project.id}>\n                                <h2>{project.name}</h2>\n                                <a href={project.url}>More details on TVMaze</a>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        </main>\n    );\n}\n\nexport default TVmaze;","import { useState, useEffect} from 'react';\nimport { getAuth, updateProfile } from 'firebase/auth';\nimport { Form, Button, Offcanvas } from 'react-bootstrap';\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\n\nconst UpdateUser = () => {\n    const auth = getAuth();\n    const [user, loading, error] = useAuthState(auth);\n    const [show, setShow] = useState(false)\n    const handleClose = () => setShow(false);\n    const [status, setStatus] = useState(\"unknown\")\n\n    const [userinfo, setUserinfo] = useState({\n        displayName:'',\n        email:'',\n        photoURL:'',\n    })\n\n    useEffect(() => {\n        if (!loading && user){\n            console.log(\"logged in! \")\n            setUserinfo((info) => ({\n                ...info,\n                displayName: auth.currentUser.displayName,\n                email: auth.currentUser.email,\n                photoURL:auth.currentUser.photoURL\n            }))\n        } else {\n            console.log(\"not logged in\")\n        }\n    },[user])\n\n\n    const handleClick = () => {\n        if (user) {\n            console.log(\"in handleClick\")\n            updateProfile(auth.currentUser, {\n                displayName: userinfo.displayName, photoURL: userinfo.photoURL\n            }).then(() => {\n                setStatus(\"success\")\n                console.log(\"success\" + user)\n                setShow(true)\n            }).catch((error) => {\n                setStatus(error)\n                console.log(error)\n                setShow(true)\n            });\n        }\n    }\n\n    return (\n        <Form className=\"mb-3\">\n            <Form.Group className=\"mb-3\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control \n                    type=\"text\" \n                    placeholder=\"Enter Username/Display name\" \n                    name = \"username\"\n                    value={userinfo.displayName}\n                    onChange={(e) => setUserinfo((info) => ({\n                        ...info,\n                        displayName: e.target.value,\n                    }))}/>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n                <Form.Label>Profile Picture</Form.Label>\n                <Form.Control \n                    type=\"text\" \n                    placeholder=\"ex. link ending in '.png'\" \n                    name = \"email\"\n                    value={userinfo.photoURL}\n                    onChange={(e) => setUserinfo((info) => ({\n                        ...info,\n                        photoURL: e.target.value,\n                    }))}/>\n            </Form.Group>\n\n            <Button \n                bsPrefix=\"customButton\"\n                variant=\"success\" \n                onClick={() => handleClick()}\n                >\n                Update\n            </Button>\n            <Offcanvas show={show} onHide={handleClose}>\n                <Offcanvas.Header closeButton>\n                    <Offcanvas.Title> {status === \"success\"? \n                        <p>Updated Profile Successfully, Welcome {userinfo.displayName}</p> : \n                        <p> An Error Occur, Please Try Again</p>}</Offcanvas.Title>\n                </Offcanvas.Header>\n        </Offcanvas>\n        </Form>\n    );\n}\n\nexport default UpdateUser;","import { useEffect, useState } from 'react';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { getAuth } from 'firebase/auth';\nimport { Tabs, Tab, Button } from 'react-bootstrap';\nimport styles from '../card.module.css'\nimport UpdateUser from '../../Subpages/UpdateUser';\n\nconst AdminPage = () => {\n  \n  const auth = getAuth();\n  const [user, loading, error] = useAuthState(auth);\n  // using user.uid\n  useEffect(() => {\n    if (!loading && user){\n        console.log(\"logged in as \" + user.displayName + \" with email \" + user.email)\n        setUserinfo((info) => ({\n            ...info,\n            displayName: auth.currentUser.displayName,\n            email: auth.currentUser.email,\n            photoURL:auth.currentUser.photoURL\n        }))\n    } else {\n        console.log(\"not logged in\")\n    }\n  },[user])\n\n  const [userinfo, setUserinfo] = useState({\n    displayName:'',\n    email:'',\n    photoURL:'',\n  })\n\n  const [key, setKey] = useState('info');\n  const [updatingP, setUpdatingP] = useState(false)\n\n  return (\n    <div className={styles.tabs}>\n    <Tabs\n      id=\"controlled-tab-example\"\n      activeKey={key}\n      onSelect={(k) => setKey(k)}\n      className=\"mb-3\"\n    >\n      <Tab eventKey=\"info\" title=\"Profile\">\n        <div>\n            <div className={styles.container}>\n                <div className={styles.contentContainer}>\n\n                    {!user? <h2 className={styles.name}> Not Logged In! </h2> : <div>\n                    <h2 className={styles.name}> Account Information </h2>\n                    <br/>\n                    <div className={styles.content}>\n                        <p className={styles.headline}>Username: {userinfo.displayName?\n                            userinfo.displayName : \"Not set yet\"}</p>\n                        <p className={styles.info}>Email: {userinfo.email}</p>\n                        <p className={styles.info}>Role: yet to be implemented</p>\n                        \n                    </div>\n                    <br />\n                    {!updatingP && <Button \n                        bsPrefix={styles.updateButton}\n                        variant=\"success\" \n                        onClick={() => setUpdatingP(true)}\n                        >\n                        Update Profile\n                    </Button>}\n                    {updatingP && <div> \n                        <Button \n                            bsPrefix={styles.deleteButton}\n                            variant=\"success\" \n                            onClick={() => setUpdatingP(false)}\n                            >\n                            Cancel Update\n                        </Button> <br/> <br/>\n                    <UpdateUser/> </div>}\n                    </div>}\n\n                </div>\n                <div className={styles.imgContainer}>\n                    <p className={styles.info}>Photo: <br/> <br/> {userinfo.photoURL? \n                            <img className={styles.profilepic} src= {userinfo.photoURL}/> : \"Not set yet\"}</p>\n\n                </div>\n            </div>\n        </div>\n      </Tab>\n\n      <Tab eventKey=\"emailchange\" title=\"Change Email\">\n        <div>\n            <div className={styles.container}>\n                \n            </div>\n        </div>\n      </Tab>\n      <Tab eventKey=\"pwdchange\" title=\"Change Password\">\n        <div>\n            <div className={styles.container}>\n                \n            </div>\n        </div>\n      </Tab>\n      <Tab eventKey=\"activities\" title=\"Activities\">\n        <div>\n            <div className={styles.container}>\n            <div className={styles.contentContainer}>\n\n            {!user? <h2 className={styles.name}> Not Logged In! </h2> : <div>\n                <h2 className={styles.name}> Recents </h2>\n                <br/>\n                <p className={styles.name}>Comments OR post-following OR changes made by the user</p>\n            </div>}\n\n            </div>\n            </div>\n        </div>\n      </Tab>\n    </Tabs>\n    </div>\n    // <Form className=\"mb-4\">\n    //     <h2 className=\"title\">Sign In</h2>\n    //     <Form.Group className=\"mb-4\">\n    //         <Form.Label>Email</Form.Label>\n    //         <Form.Control \n    //             type=\"email\" \n    //             placeholder=\"Enter Email\" \n    //             name = \"email\"\n    //             value={email}\n    //             onChange={(e) => setEmail(e.target.value)}/>\n    //     </Form.Group>\n    //     <Form.Group className=\"mb-4\">\n    //         <Form.Label>Password</Form.Label>\n    //         <Form.Control \n    //             type=\"password\" \n    //             placeholder=\"Enter Password\" \n    //             name = \"password\"\n    //             value={password}\n    //             onChange={(e) => setPassword(e.target.value)}/>\n    //     </Form.Group>\n    //     <Button \n    //             bsPrefix=\"customButton\"\n    //             variant=\"success\" \n    //             onClick={() => signInWithEmailAndPassword(email, password)}\n    //             >\n    //             Sign In\n    //     </Button>\n    //   {error && <p>Error: {error.message}</p>}\n    //   {loading && <p>Loading...</p>}\n    // </Form>\n  );\n};\n\nexport default AdminPage;","import { useState } from 'react';\nimport { useSignInWithEmailAndPassword } from 'react-firebase-hooks/auth';\nimport { getAuth, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { Form, Button } from 'react-bootstrap';\n\nconst SignInForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const auth = getAuth();\n\n  const [\n    signInWithEmailAndPassword,\n    user,\n    loading,\n    error,\n  ] = useSignInWithEmailAndPassword(auth, email, password);\n\n  return (\n    <Form className=\"mb-4\">\n        <h2 className=\"title\">Sign In</h2>\n        <Form.Group className=\"mb-4\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control \n                type=\"email\" \n                placeholder=\"Enter Email\" \n                name = \"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}/>\n        </Form.Group>\n        <Form.Group className=\"mb-4\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control \n                type=\"password\" \n                placeholder=\"Enter Password\" \n                name = \"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}/>\n        </Form.Group>\n        <Button \n                bsPrefix=\"customButton\"\n                variant=\"success\" \n                onClick={() => signInWithEmailAndPassword(email, password)}\n                >\n                Sign In\n        </Button>\n      {error && <p>Error: {error.message}</p>}\n      {loading && <p>Loading...</p>}\n      {/* Successful Log-in is being handled in Navbar.js */}\n    </Form>\n  );\n};\n\nexport default SignInForm;","import { useState } from 'react';\nimport styles from './styles.module.css';\nimport { getAuth, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport {Button, Offcanvas} from 'react-bootstrap'\nimport SignInForm from './Auth/SignIn';\nimport * as ROUTES from '../constants/routes';\n\nconst Navbar = () => {\n\n  const auth = getAuth()\n  const [user, loading, error] = useAuthState(auth);\n  const [loginPrompt, setLoginPrompt] = useState(false);\n  const handleClose = () => setLoginPrompt(false);\n\n  const handleClick = () => {\n    setLoginPrompt(true)\n    if (!loading){\n      if (user != null) {\n        const displayName = user.displayName;\n        const email = user.email;\n        const photoURL = user.photoURL;\n        console.log(email);\n      }\n    }\n  }\n  \n  const logout = () => {\n    signOut(auth)\n  };\n  \n  return (\n    \n    <nav className={styles.navContainer}>\n      <div className={styles.navContainer}>\n      \n        <ul className={styles.navLinks}>\n          <a className={styles.typewriter} href={ROUTES.HOME}>Poor Frontend</a>\n          <a className={styles.navItem} href={ROUTES.ORIGAMI}>Origami</a>\n          <a className={styles.navItem} href={ROUTES.ADD}>POST/Add</a>\n          <a className={styles.navItem} href={ROUTES.TVMAZE}>TVmaze&nbsp;Demo</a>\n          {user && <a className={styles.navItem} href={ROUTES.ADMIN}>Account</a>}\n          {/* <a className={styles.navItem} href=\"/subredditcool\">SubredditAPI</a> */}\n        </ul>\n        <ul className={styles.navAuth}>\n        {user? <Button bsPrefix={styles.navButton} onClick={logout}>Log&nbsp;out</Button> : \n                <Button bsPrefix={styles.navButton} onClick={handleClick}>Log&nbsp;in/Sign&nbsp;Up</Button>}\n        \n        <Offcanvas show={loginPrompt} onHide={handleClose}>\n            <Offcanvas.Header closeButton>\n\n            </Offcanvas.Header>\n            <Offcanvas.Body>\n              {!user && <SignInForm/>}\n              {user && <div><h2 className=\"title\"> Signed in as: </h2><a className=\"customButton\" href={ROUTES.ADMIN}> {user.email} </a></div>}\n            </Offcanvas.Body>\n        </Offcanvas>\n        </ul>\n        </div>\n    </nav>\n  );\n}\n\nexport default Navbar;","// import logo from './logo.svg';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route, useRoutes } from 'react-router-dom';\nimport * as ROUTES from './constants/routes';\n// import { Helmet } from 'react-helmet'; // Dynamic Meta Info in header\n\n// pages\nimport Home from './Home';\nimport Origami from './Origami';\nimport Add from './Add';\nimport TVmaze from './TVmazeDemo';\nimport AdminPage from './components/Auth/Admin';\n// import Subreddit from './Subreddit'; \n\n// components\nimport Navbar from './components/Navbar';\n\n\nconst App = () => {\n  return (\n    \n    <React.Fragment>\n      <div className=\"header\">\n        <Navbar />\n      </div>\n       <div className=\"App\">\n         <BrowserRouter>\n         <Routes>\n          <Route exact path={ROUTES.HOME} element={<Home/>} />\n          <Route exact path={ROUTES.ORIGAMI} element={<Origami/>} />\n          <Route exact path={ROUTES.ADD} element={<Add/>} />\n          <Route exact path={ROUTES.TVMAZE} element={<TVmaze/>} />\n          <Route exact path={ROUTES.ADMIN} element={<AdminPage/>} />\n\n        </Routes>\n        \n        {/* <Routes>\n          <Route exact path=\"/subredditcool\" element={<Subreddit/>} />\n        </Routes> */}\n      </BrowserRouter>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Firebase, { FirebaseContext } from './components/Auth/Firebase';\n\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"md-theme-default\":\"styles_md-theme-default__XbdOF\",\"md-button\":\"styles_md-button__Wxwj4\",\"hidden\":\"styles_hidden__2Noa1\",\"visible\":\"styles_visible__3vn7I\",\"navContainer\":\"styles_navContainer__iWXLs\",\"navLinks\":\"styles_navLinks__1SsRB\",\"navItem\":\"styles_navItem__3iAlF\",\"navAuth\":\"styles_navAuth__iWnD3\",\"navButton\":\"styles_navButton__17mGs\",\"typewriter\":\"styles_typewriter__2tuQy\",\"typing\":\"styles_typing__2UA48\",\"blink-caret\":\"styles_blink-caret__3_pR6\"};"],"sourceRoot":""}